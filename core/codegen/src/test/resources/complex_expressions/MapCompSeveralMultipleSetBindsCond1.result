import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Object Run() {
        return Test();
    }

    public static VDMMap Test() {
        VDMMap mapCompResult_1 = MapUtil.map();
        VDMSet set_1 = SetUtil.set(1L, 2L, 3L);

        for (Iterator iterator_1 = set_1.iterator(); iterator_1.hasNext();) {
            Number x = ((Number) iterator_1.next());
            VDMSet set_2 = SetUtil.set(6L, 7L, 8L);

            for (Iterator iterator_2 = set_2.iterator(); iterator_2.hasNext();) {
                Number y = ((Number) iterator_2.next());

                if (1L == 1L) {
                    mapCompResult_1 = MapUtil.munion(Utils.clone(
                                mapCompResult_1),
                            MapUtil.map(
                                new Maplet(x.longValue() * y.longValue(),
                                    y.longValue() * x.longValue())));
                }
            }
        }

        return Utils.clone(mapCompResult_1);
    }

    public String toString() {
        return "Entry{}";
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
