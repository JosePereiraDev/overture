import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    private static VDMSeq xs = SeqUtil.seq();

    public Entry() {
    }

    public static Number id(final Number x) {
        xs = SeqUtil.conc(Utils.clone(xs), SeqUtil.seq(x));

        return x;
    }

    public static Boolean op() {
        Boolean andResult_1 = false;

        if (id(1L).longValue() < id(2L).longValue()) {
            Boolean ternaryIfExp_1 = null;

            if (id(3L).longValue() < id(4L).longValue()) {
                Boolean andResult_2 = false;

                if (id(5L).longValue() < id(6L).longValue()) {
                    if (true) {
                        andResult_2 = true;
                    }
                }

                ternaryIfExp_1 = andResult_2;
            } else {
                ternaryIfExp_1 = false;
            }

            if ((ternaryIfExp_1)) {
                andResult_1 = true;
            }
        }

        return andResult_1;
    }

    public static Object Run() {
        Boolean ignorePattern_1 = op();

        return Utils.clone(xs);
    }

    public String toString() {
        return "Entry{" + "xs := " + Utils.toString(xs) + "}";
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
