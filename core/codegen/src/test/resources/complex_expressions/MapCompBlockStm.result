import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    private static final VDMSeq s = SeqUtil.seq(1L, 2L, 3L);

    public Entry() {
    }

    public static Object Run() {
        return Test();
    }

    public static VDMMap Test() {
        VDMMap mapCompResult_1 = MapUtil.map();
        VDMSet set_1 = SeqUtil.elems(Utils.clone(s));

        for (Iterator iterator_1 = set_1.iterator(); iterator_1.hasNext();) {
            Number x = ((Number) iterator_1.next());

            if (1L == 1L) {
                mapCompResult_1 = MapUtil.munion(Utils.clone(mapCompResult_1),
                        MapUtil.map(new Maplet(x, x.longValue() + 1L)));
            }
        }

        VDMMap a = Utils.clone(mapCompResult_1);

        return Utils.clone(a);
    }

    public String toString() {
        return "Entry{" + "s = " + Utils.toString(s) + "}";
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
