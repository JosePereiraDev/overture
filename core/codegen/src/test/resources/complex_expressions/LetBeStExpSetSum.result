import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Number Run() {
        return sum(SetUtil.set(1L, 2L, 3L, 4L, 5L, 6L));
    }

    public static Number sum(final VDMSet xs) {
        if (xs.isEmpty()) {
            return 0L;
        } else {
            Number x = null;
            Boolean success_1 = false;
            VDMSet set_1 = Utils.clone(xs);

            for (Iterator iterator_1 = set_1.iterator();
                    iterator_1.hasNext() && !(success_1);) {
                x = ((Number) iterator_1.next());
                success_1 = true;
            }

            if (!(success_1)) {
                throw new RuntimeException(
                    "Let Be St found no applicable bindings");
            }

            Number letBeStExp_1 = x.longValue() +
                sum(SetUtil.diff(Utils.clone(xs), SetUtil.set(x))).longValue();

            return letBeStExp_1;
        }
    }

    public String toString() {
        return "Entry{}";
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
