import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Number x = 4L;

    public Entry() {
    }

    public static Object Run() {
        VDMSeq ternaryIfExp_1 = null;

        if (1L == 1L) {
            ternaryIfExp_1 = SeqUtil.seq(SeqUtil.seq(new Entry()));
        } else {
            ternaryIfExp_1 = SeqUtil.seq(SeqUtil.seq());
        }

        VDMSeq m = Utils.clone(ternaryIfExp_1);
        VDMSeq s = Utils.clone(((VDMSeq) m.get(Utils.index(1L))));

        Object obj_1 = s.get(Utils.index(s.size()));

        Number apply_1 = null;

        if (obj_1 instanceof Entry) {
            apply_1 = ((Entry) obj_1).x;
        } else {
            throw new RuntimeException("Missing member: x");
        }

        Object v = apply_1;

        return ((Object) v);
    }

    public String toString() {
        return "Entry{" + "x := " + Utils.toString(x) + "}";
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
