import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    private static final VDMMap xs = MapUtil.map(new Maplet(1L, 1L),
            new Maplet(2L, 2L));

    public Entry() {
    }

    public static Object Run() {
        VDMMap mapCompResult_1 = MapUtil.map();
        VDMSet set_1 = MapUtil.dom(Utils.clone(xs));

        for (Iterator iterator_1 = set_1.iterator(); iterator_1.hasNext();) {
            Object e = ((Object) iterator_1.next());

            if (((Number) e).longValue() == 2L) {
                mapCompResult_1 = MapUtil.munion(Utils.clone(mapCompResult_1),
                        MapUtil.map(
                            new Maplet(e, ((Number) e).longValue() + 1L)));
            }
        }

        return Utils.clone(mapCompResult_1);
    }

    public String toString() {
        return "Entry{" + "xs = " + Utils.toString(xs) + "}";
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
