import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static VDMSet op() {
        Func_1<Number, VDMSet> d = new Func_1<Number, VDMSet>() {
                public VDMSet eval(final Number x) {
                    VDMSet setCompResult_1 = SetUtil.set();
                    VDMSet set_1 = SetUtil.set(1L, 2L, 3L);

                    for (Iterator iterator_1 = set_1.iterator();
                            iterator_1.hasNext();) {
                        Number z = ((Number) iterator_1.next());
                        setCompResult_1 = SetUtil.union(setCompResult_1.clone(),
                                SetUtil.set(z));
                    }

                    return setCompResult_1.clone();
                }
            };

        return d.eval(40L);
    }

    public static Object Run() {
        return op();
    }
}

##########
public interface Func_1<T_1, T_2> {
    public abstract T_2 eval(final T_1 param_1);
}

##########
