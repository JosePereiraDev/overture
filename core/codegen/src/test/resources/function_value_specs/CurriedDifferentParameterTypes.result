import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Func_1<String, VDMSeq, Func_1<Tuple, Tuple, Number>> f(
        final Number n, final Character c) {
        return new Func_1<String, VDMSeq, Func_1<Tuple, Tuple, Number>>() {
                public Func_1<Tuple, Tuple, Number> eval(final String xs,
                    final VDMSeq ys) {
                    return new Func_1<Tuple, Tuple, Number>() {
                            public Number eval(final Tuple tn, final Tuple tc) {
                                return 2.1;
                            }
                        };
                }
            };
    }

    public static Object Run() {
        return f(1L, 'a').eval("a", SeqUtil.seq(1L))
                   .eval(Tuple.mk_(1L, 1L), Tuple.mk_('a', 'a'));
    }
}

##########
public interface Func_1<T_1, T_2, T_3> {
    public abstract T_3 eval(final T_1 param_1, final T_2 param_2);
}

##########
