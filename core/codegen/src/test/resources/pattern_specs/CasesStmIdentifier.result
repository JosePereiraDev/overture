import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Number casesInt(final Number n) {
        Number intPattern_1 = n;
        Boolean success_1 = intPattern_1.longValue() == 1L;

        if (!(success_1)) {
            Number intPattern_2 = n;
            success_1 = intPattern_2.longValue() == 2L;

            if (!(success_1)) {
                Number intPattern_3 = n;
                success_1 = intPattern_3.longValue() == 3L;

                if (!(success_1)) {
                    Number a = n;

                    success_1 = true;

                    if (success_1) {
                        Number x = 1L;
                        Number y = 2L;

                        return a.longValue() + x.longValue() + y.longValue();
                    } else {
                        return 999L;
                    }
                } else {
                    return n.longValue() + 3L;
                }
            } else {
                return n.longValue() + 2L;
            }
        } else {
            return n.longValue() + 1L;
        }
    }

    public static Object Run() {
        VDMSeq result = SeqUtil.seq();
        long toVar_1 = 5L;

        for (Long i = 0L; i <= toVar_1; i++) {
            result = SeqUtil.conc(Utils.clone(result), SeqUtil.seq(casesInt(i)));
        }

        return Utils.clone(result);
    }

    public String toString() {
        return "Entry{}";
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
