import org.overture.codegen.runtime.*;

import java.util.*;


public class A {
    public A() {
    }

    public static class RecA implements Record {
        public Number i;
        public Character c;
        public Number r;
        public Number q;
        public Number n;
        public Number n1;

        public RecA(final Number _i, final Character _c, final Number _r,
            final Number _q, final Number _n, final Number _n1) {
            i = _i;
            c = _c;
            r = _r;
            q = _q;
            n = _n;
            n1 = _n1;
        }

        public boolean equals(final Object obj) {
            if (!(obj instanceof RecA)) {
                return false;
            }

            RecA other = ((RecA) obj);

            return (i.longValue() == other.i.longValue()) && (c == other.c) &&
            (r.doubleValue() == other.r.doubleValue()) &&
            (q.doubleValue() == other.q.doubleValue()) &&
            (n.longValue() == other.n.longValue()) &&
            (n1.longValue() == other.n1.longValue());
        }

        public int hashCode() {
            return Utils.hashCode(i, c, r, q, n, n1);
        }

        public RecA clone() {
            return new RecA(i, c, r, q, n, n1);
        }

        public String toString() {
            return Utils.recordToString(this, i, c, r, q, n, n1);
        }
    }
}

##########
