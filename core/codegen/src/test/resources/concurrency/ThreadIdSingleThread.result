import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry implements EvaluatePP {
    public volatile Sentinel sentinel;

    public Entry() {
        sentinel = new Entry_sentinel(this);
    }

    public static Object Run() {
        return f();
    }

    public static Number f() {
        return Thread.currentThread().getId();
    }

    public String toString() {
        return "Entry{}";
    }

    public Boolean evaluatePP(final Number fnr) {
        if (fnr.longValue() == 0L) {
            return true;
        } else if (fnr.longValue() == 1L) {
            return true;
        } else if (fnr.longValue() == 2L) {
            return true;
        } else if (fnr.longValue() == 3L) {
            return true;
        } else {
            return true;
        }
    }

    public class Entry_sentinel extends Sentinel {
        public final int Run = 0;
        public final int Entry = 1;
        public final int f = 2;
        public final int toString = 3;
        public final int function_sum = 4;

        public Entry_sentinel() {
        }

        public Entry_sentinel(final EvaluatePP instance) {
            init(instance, function_sum);
        }
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
