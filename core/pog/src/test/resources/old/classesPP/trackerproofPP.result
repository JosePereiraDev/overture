<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="17" line="42" message="Introduce(Tracker, ContainerId, real, Material): map compatible obligation in 'TRACKER' (trackerproofPP) at line 42:17&#10;(forall trk:Tracker, cid:ContainerId, quan:real, mat:Material &amp; (cid not in set (dom (trk.containers))) =&gt;&#10;  forall ldom1 in set dom (trk.containers), rdom2 in set dom {cid |-&gt; mk_Container(quan, mat)} &amp;&#10;  ldom1 = rdom2 =&gt; (trk.containers)(ldom1) = {cid |-&gt; mk_Container(quan, mat)}(rdom2))&#10;" number="0" object="" resource="trackerproofPP" toString="Introduce(Tracker, ContainerId, real, Material): map compatible obligation in 'TRACKER' (trackerproofPP) at line 42:17&#10;(forall trk:Tracker, cid:ContainerId, quan:real, mat:Material &amp; (cid not in set (dom (trk.containers))) =&gt;&#10;  forall ldom1 in set dom (trk.containers), rdom2 in set dom {cid |-&gt; mk_Container(quan, mat)} &amp;&#10;  ldom1 = rdom2 =&gt; (trk.containers)(ldom1) = {cid |-&gt; mk_Container(quan, mat)}(rdom2))&#10;"/>
<po column="6" line="42" message="Introduce(Tracker, ContainerId, real, Material): subtype obligation in 'TRACKER' (trackerproofPP) at line 42:6&#10;(forall trk:Tracker, cid:ContainerId, quan:real, mat:Material &amp; (cid not in set (dom (trk.containers))) =&gt;&#10;  inv_Tracker(mk_Tracker(((trk.containers) munion {cid |-&gt; mk_Container(quan, mat)}), (trk.phases))))&#10;" number="0" object="" resource="trackerproofPP" toString="Introduce(Tracker, ContainerId, real, Material): subtype obligation in 'TRACKER' (trackerproofPP) at line 42:6&#10;(forall trk:Tracker, cid:ContainerId, quan:real, mat:Material &amp; (cid not in set (dom (trk.containers))) =&gt;&#10;  inv_Tracker(mk_Tracker(((trk.containers) munion {cid |-&gt; mk_Container(quan, mat)}), (trk.phases))))&#10;"/>
<po column="10" line="53" message="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 53:10&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      dest in set dom phases)))&#10;" number="0" object="" resource="trackerproofPP" toString="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 53:10&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      dest in set dom phases)))&#10;"/>
<po column="34" line="53" message="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 53:34&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      dest in set dom phases)))&#10;" number="0" object="" resource="trackerproofPP" toString="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 53:34&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      dest in set dom phases)))&#10;"/>
<po column="5" line="54" message="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 54:5&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      (((card (phases(dest).contents)) &lt; (phases(dest).capacity)) =&gt;&#10;        cid in set dom containers))))&#10;" number="0" object="" resource="trackerproofPP" toString="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 54:5&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      (((card (phases(dest).contents)) &lt; (phases(dest).capacity)) =&gt;&#10;        cid in set dom containers))))&#10;"/>
<po column="37" line="54" message="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 54:37&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      (((card (phases(dest).contents)) &lt; (phases(dest).capacity)) =&gt;&#10;        dest in set dom phases))))&#10;" number="0" object="" resource="trackerproofPP" toString="Permission(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 54:37&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId &amp;&#10;  ((cid in set (dom containers)) =&gt;&#10;    ((dest in set (dom phases)) =&gt;&#10;      (((card (phases(dest).contents)) &lt; (phases(dest).capacity)) =&gt;&#10;        dest in set dom phases))))&#10;"/>
<po column="24" line="60" message="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 60:24&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  ptoid in set dom (trk.phases))&#10;" number="0" object="" resource="trackerproofPP" toString="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 60:24&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  ptoid in set dom (trk.phases))&#10;"/>
<po column="23" line="61" message="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 61:23&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  ptoid in set dom (trk.phases))&#10;" number="0" object="" resource="trackerproofPP" toString="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 61:23&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  ptoid in set dom (trk.phases))&#10;"/>
<po column="23" line="62" message="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 62:23&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  ptoid in set dom (trk.phases))&#10;" number="0" object="" resource="trackerproofPP" toString="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 62:23&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  ptoid in set dom (trk.phases))&#10;"/>
<po column="15" line="60" message="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: subtype obligation in 'TRACKER' (trackerproofPP) at line 60:15&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  inv_Phase(mk_Phase((((trk.phases)(ptoid).contents) union {cid}), ((trk.phases)(ptoid).expected_materials), ((trk.phases)(ptoid).capacity))))&#10;" number="0" object="" resource="trackerproofPP" toString="Move(Tracker, ContainerId, PhaseId, PhaseId), pha: subtype obligation in 'TRACKER' (trackerproofPP) at line 60:15&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  inv_Phase(mk_Phase((((trk.phases)(ptoid).contents) union {cid}), ((trk.phases)(ptoid).expected_materials), ((trk.phases)(ptoid).capacity))))&#10;"/>
<po column="14" line="65" message="Move(Tracker, ContainerId, PhaseId, PhaseId): function apply obligation in 'TRACKER' (trackerproofPP) at line 65:14&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  (let pha:Phase = mk_Phase((((trk.phases)(ptoid).contents) union {cid}), ((trk.phases)(ptoid).expected_materials), ((trk.phases)(ptoid).capacity)) in&#10;    pre_Remove(trk, cid, pfromid)))&#10;" number="0" object="" resource="trackerproofPP" toString="Move(Tracker, ContainerId, PhaseId, PhaseId): function apply obligation in 'TRACKER' (trackerproofPP) at line 65:14&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  (let pha:Phase = mk_Phase((((trk.phases)(ptoid).contents) union {cid}), ((trk.phases)(ptoid).expected_materials), ((trk.phases)(ptoid).capacity)) in&#10;    pre_Remove(trk, cid, pfromid)))&#10;"/>
<po column="7" line="64" message="Move(Tracker, ContainerId, PhaseId, PhaseId): subtype obligation in 'TRACKER' (trackerproofPP) at line 64:7&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  (let pha:Phase = mk_Phase((((trk.phases)(ptoid).contents) union {cid}), ((trk.phases)(ptoid).expected_materials), ((trk.phases)(ptoid).capacity)) in&#10;    inv_Tracker(mk_Tracker((trk.containers), ((Remove(trk, cid, pfromid).phases) ++ {ptoid |-&gt; pha})))))&#10;" number="0" object="" resource="trackerproofPP" toString="Move(Tracker, ContainerId, PhaseId, PhaseId): subtype obligation in 'TRACKER' (trackerproofPP) at line 64:7&#10;(forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId &amp; (Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) =&gt;&#10;  (let pha:Phase = mk_Phase((((trk.phases)(ptoid).contents) union {cid}), ((trk.phases)(ptoid).expected_materials), ((trk.phases)(ptoid).capacity)) in&#10;    inv_Tracker(mk_Tracker((trk.containers), ((Remove(trk, cid, pfromid).phases) ++ {ptoid |-&gt; pha})))))&#10;"/>
<po column="16" line="78" message="Remove(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 78:16&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp;&#10;  ((source in set (dom phases)) =&gt;&#10;    source in set dom phases))&#10;" number="0" object="" resource="trackerproofPP" toString="Remove(Tracker, ContainerId, PhaseId): map apply obligation in 'TRACKER' (trackerproofPP) at line 78:16&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp;&#10;  ((source in set (dom phases)) =&gt;&#10;    source in set dom phases))&#10;"/>
<po column="24" line="72" message="Remove(Tracker, ContainerId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 72:24&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  source in set dom phases)&#10;" number="0" object="" resource="trackerproofPP" toString="Remove(Tracker, ContainerId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 72:24&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  source in set dom phases)&#10;"/>
<po column="22" line="73" message="Remove(Tracker, ContainerId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 73:22&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  source in set dom phases)&#10;" number="0" object="" resource="trackerproofPP" toString="Remove(Tracker, ContainerId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 73:22&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  source in set dom phases)&#10;"/>
<po column="22" line="74" message="Remove(Tracker, ContainerId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 74:22&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  source in set dom phases)&#10;" number="0" object="" resource="trackerproofPP" toString="Remove(Tracker, ContainerId, PhaseId), pha: map apply obligation in 'TRACKER' (trackerproofPP) at line 74:22&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  source in set dom phases)&#10;"/>
<po column="15" line="72" message="Remove(Tracker, ContainerId, PhaseId), pha: subtype obligation in 'TRACKER' (trackerproofPP) at line 72:15&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  inv_Phase(mk_Phase(((phases(source).contents) \ {cid}), (phases(source).expected_materials), (phases(source).capacity))))&#10;" number="0" object="" resource="trackerproofPP" toString="Remove(Tracker, ContainerId, PhaseId), pha: subtype obligation in 'TRACKER' (trackerproofPP) at line 72:15&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  inv_Phase(mk_Phase(((phases(source).contents) \ {cid}), (phases(source).expected_materials), (phases(source).capacity))))&#10;"/>
<po column="7" line="76" message="Remove(Tracker, ContainerId, PhaseId): subtype obligation in 'TRACKER' (trackerproofPP) at line 76:7&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  (let pha:Phase = mk_Phase(((phases(source).contents) \ {cid}), (phases(source).expected_materials), (phases(source).capacity)) in&#10;    inv_Tracker(mk_Tracker(containers, (phases ++ {source |-&gt; pha})))))&#10;" number="0" object="" resource="trackerproofPP" toString="Remove(Tracker, ContainerId, PhaseId): subtype obligation in 'TRACKER' (trackerproofPP) at line 76:7&#10;(forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId &amp; ((source in set (dom phases)) and (cid in set (phases(source).contents))) =&gt;&#10;  (let pha:Phase = mk_Phase(((phases(source).contents) \ {cid}), (phases(source).expected_materials), (phases(source).capacity)) in&#10;    inv_Tracker(mk_Tracker(containers, (phases ++ {source |-&gt; pha})))))&#10;"/>
<po column="16" line="85" message="Delete(Tracker, ContainerId, PhaseId): function apply obligation in 'TRACKER' (trackerproofPP) at line 85:16&#10;(forall tkr:Tracker, cid:ContainerId, source:PhaseId &amp; pre_Remove(tkr, cid, source) =&gt;&#10;  pre_Remove(tkr, cid, source))&#10;" number="0" object="" resource="trackerproofPP" toString="Delete(Tracker, ContainerId, PhaseId): function apply obligation in 'TRACKER' (trackerproofPP) at line 85:16&#10;(forall tkr:Tracker, cid:ContainerId, source:PhaseId &amp; pre_Remove(tkr, cid, source) =&gt;&#10;  pre_Remove(tkr, cid, source))&#10;"/>
<po column="5" line="84" message="Delete(Tracker, ContainerId, PhaseId): subtype obligation in 'TRACKER' (trackerproofPP) at line 84:5&#10;(forall tkr:Tracker, cid:ContainerId, source:PhaseId &amp; pre_Remove(tkr, cid, source) =&gt;&#10;  inv_Tracker(mk_Tracker(({cid} &lt;-: (tkr.containers)), (Remove(tkr, cid, source).phases))))&#10;" number="0" object="" resource="trackerproofPP" toString="Delete(Tracker, ContainerId, PhaseId): subtype obligation in 'TRACKER' (trackerproofPP) at line 84:5&#10;(forall tkr:Tracker, cid:ContainerId, source:PhaseId &amp; pre_Remove(tkr, cid, source) =&gt;&#10;  inv_Tracker(mk_Tracker(({cid} &lt;-: (tkr.containers)), (Remove(tkr, cid, source).phases))))&#10;"/>
<po column="7" line="99" message="PhasesDistinguished(PhaseInfo): map apply obligation in 'TRACKER' (trackerproofPP) at line 99:7&#10;(forall phases:PhaseInfo &amp;&#10;  (forall p1, p2 in set (dom phases) &amp;&#10;    ((p1 &lt;&gt; p2) =&gt;&#10;      p1 in set dom phases)))&#10;" number="0" object="" resource="trackerproofPP" toString="PhasesDistinguished(PhaseInfo): map apply obligation in 'TRACKER' (trackerproofPP) at line 99:7&#10;(forall phases:PhaseInfo &amp;&#10;  (forall p1, p2 in set (dom phases) &amp;&#10;    ((p1 &lt;&gt; p2) =&gt;&#10;      p1 in set dom phases)))&#10;"/>
<po column="33" line="99" message="PhasesDistinguished(PhaseInfo): map apply obligation in 'TRACKER' (trackerproofPP) at line 99:33&#10;(forall phases:PhaseInfo &amp;&#10;  (forall p1, p2 in set (dom phases) &amp;&#10;    ((p1 &lt;&gt; p2) =&gt;&#10;      p2 in set dom phases)))&#10;" number="0" object="" resource="trackerproofPP" toString="PhasesDistinguished(PhaseInfo): map apply obligation in 'TRACKER' (trackerproofPP) at line 99:33&#10;(forall phases:PhaseInfo &amp;&#10;  (forall p1, p2 in set (dom phases) &amp;&#10;    ((p1 &lt;&gt; p2) =&gt;&#10;      p2 in set dom phases)))&#10;"/>
<po column="12" line="106" message="MaterialSafe(ContainerInfo, PhaseInfo): map apply obligation in 'TRACKER' (trackerproofPP) at line 106:12&#10;(forall containers:ContainerInfo, phases:PhaseInfo &amp;&#10;  (forall ph in set (rng phases) &amp;&#10;    (forall cid in set (ph.contents) &amp;&#10;      ((cid in set (dom containers)) =&gt;&#10;        cid in set dom containers))))&#10;" number="0" object="" resource="trackerproofPP" toString="MaterialSafe(ContainerInfo, PhaseInfo): map apply obligation in 'TRACKER' (trackerproofPP) at line 106:12&#10;(forall containers:ContainerInfo, phases:PhaseInfo &amp;&#10;  (forall ph in set (rng phases) &amp;&#10;    (forall cid in set (ph.contents) &amp;&#10;      ((cid in set (dom containers)) =&gt;&#10;        cid in set dom containers))))&#10;"/>
</result>
</testResult>
