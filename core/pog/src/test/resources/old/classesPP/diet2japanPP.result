<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="15" line="15" message="BMI(real, real): post condition obligation in 'Diet' (diet2japanPP) at line 15:15&#10;(forall weight:real, height:real &amp;&#10;  pre_BMI(weight, height) =&gt; post_BMI(weight, height, let h100:real = (height / 100) in (weight / (h100 ** 2))))&#10;" number="0" object="" resource="diet2japanPP" toString="BMI(real, real): post condition obligation in 'Diet' (diet2japanPP) at line 15:15&#10;(forall weight:real, height:real &amp;&#10;  pre_BMI(weight, height) =&gt; post_BMI(weight, height, let h100:real = (height / 100) in (weight / (h100 ** 2))))&#10;"/>
<po column="12" line="18" message="BMI(real, real): non-zero obligation in 'Diet' (diet2japanPP) at line 18:12&#10;(forall weight:real, height:real &amp; ((weight &gt; 0) and (height &gt; 0)) =&gt;&#10;  (let h100:real = (height / 100) in&#10;    (h100 ** 2) &lt;&gt; 0))&#10;" number="0" object="" resource="diet2japanPP" toString="BMI(real, real): non-zero obligation in 'Diet' (diet2japanPP) at line 18:12&#10;(forall weight:real, height:real &amp; ((weight &gt; 0) and (height &gt; 0)) =&gt;&#10;  (let h100:real = (height / 100) in&#10;    (h100 ** 2) &lt;&gt; 0))&#10;"/>
<po column="15" line="26" message="getWeightFromBMI(real, real): post condition obligation in 'Diet' (diet2japanPP) at line 26:15&#10;(forall height:real, aBMI:real &amp;&#10;  pre_getWeightFromBMI(height, aBMI) =&gt; post_getWeightFromBMI(height, aBMI, let f:(real -&gt; real) = (lambda [weight:real] &amp; (aBMI - BMI(weight, height))) in newton(f)(60)))&#10;" number="0" object="" resource="diet2japanPP" toString="getWeightFromBMI(real, real): post condition obligation in 'Diet' (diet2japanPP) at line 26:15&#10;(forall height:real, aBMI:real &amp;&#10;  pre_getWeightFromBMI(height, aBMI) =&gt; post_getWeightFromBMI(height, aBMI, let f:(real -&gt; real) = (lambda [weight:real] &amp; (aBMI - BMI(weight, height))) in newton(f)(60)))&#10;"/>
<po column="16" line="35" message="getWeightFromBMI(real, real): function apply obligation in 'Diet' (diet2japanPP) at line 35:16&#10;(forall height:real, aBMI:real &amp;&#10;  (((height &gt; 0) and (aBMI &gt; 0)) =&gt; let RESULT:real = let f:(real -&gt; real) = (lambda [weight:real] &amp; (aBMI - BMI(weight, height))) in newton(f)(60) in &#10;    pre_BMI(RESULT, height)))&#10;" number="0" object="" resource="diet2japanPP" toString="getWeightFromBMI(real, real): function apply obligation in 'Diet' (diet2japanPP) at line 35:16&#10;(forall height:real, aBMI:real &amp;&#10;  (((height &gt; 0) and (aBMI &gt; 0)) =&gt; let RESULT:real = let f:(real -&gt; real) = (lambda [weight:real] &amp; (aBMI - BMI(weight, height))) in newton(f)(60) in &#10;    pre_BMI(RESULT, height)))&#10;"/>
<po column="43" line="29" message="getWeightFromBMI(real, real), f: function apply obligation in 'Diet' (diet2japanPP) at line 29:43&#10;(forall height:real, aBMI:real &amp; ((height &gt; 0) and (aBMI &gt; 0)) =&gt;&#10;  (forall weight:real &amp;&#10;    pre_BMI(weight, height)))&#10;" number="0" object="" resource="diet2japanPP" toString="getWeightFromBMI(real, real), f: function apply obligation in 'Diet' (diet2japanPP) at line 29:43&#10;(forall height:real, aBMI:real &amp; ((height &gt; 0) and (aBMI &gt; 0)) =&gt;&#10;  (forall weight:real &amp;&#10;    pre_BMI(weight, height)))&#10;"/>
<po column="5" line="31" message="getWeightFromBMI(real, real): function apply obligation in 'Diet' (diet2japanPP) at line 31:5&#10;(forall height:real, aBMI:real &amp; ((height &gt; 0) and (aBMI &gt; 0)) =&gt;&#10;  (let f:(real -&gt; real) = (lambda [weight:real] &amp; (aBMI - BMI(weight, height))) in&#10;    pre_(newton(f), 60)))&#10;" number="0" object="" resource="diet2japanPP" toString="getWeightFromBMI(real, real): function apply obligation in 'Diet' (diet2japanPP) at line 31:5&#10;(forall height:real, aBMI:real &amp; ((height &gt; 0) and (aBMI &gt; 0)) =&gt;&#10;  (let f:(real -&gt; real) = (lambda [weight:real] &amp; (aBMI - BMI(weight, height))) in&#10;    pre_(newton(f), 60)))&#10;"/>
<po column="42" line="41" message="newton((real -&gt; real)), isFinish: function apply obligation in 'Diet' (diet2japanPP) at line 41:42&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    pre_(f, y)))&#10;" number="0" object="" resource="diet2japanPP" toString="newton((real -&gt; real)), isFinish: function apply obligation in 'Diet' (diet2japanPP) at line 41:42&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    pre_(f, y)))&#10;"/>
<po column="50" line="42" message="newton((real -&gt; real)), nextApproximate: function apply obligation in 'Diet' (diet2japanPP) at line 42:50&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    pre_(f, y)))&#10;" number="0" object="" resource="diet2japanPP" toString="newton((real -&gt; real)), nextApproximate: function apply obligation in 'Diet' (diet2japanPP) at line 42:50&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    pre_(f, y)))&#10;"/>
<po column="57" line="42" message="newton((real -&gt; real)), nextApproximate: function apply obligation in 'Diet' (diet2japanPP) at line 42:57&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    pre_(derivative(f), y)))&#10;" number="0" object="" resource="diet2japanPP" toString="newton((real -&gt; real)), nextApproximate: function apply obligation in 'Diet' (diet2japanPP) at line 42:57&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    pre_(derivative(f), y)))&#10;"/>
<po column="55" line="42" message="newton((real -&gt; real)), nextApproximate: non-zero obligation in 'Diet' (diet2japanPP) at line 42:55&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    derivative(f)(y) &lt;&gt; 0))&#10;" number="0" object="" resource="diet2japanPP" toString="newton((real -&gt; real)), nextApproximate: non-zero obligation in 'Diet' (diet2japanPP) at line 42:55&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (forall y:real &amp;&#10;    derivative(f)(y) &lt;&gt; 0))&#10;"/>
<po column="5" line="43" message="newton((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 43:5&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (let isFinish:(real -&gt; bool) = (lambda [y:real] &amp; ((abs f(y)) &lt; e)), nextApproximate:(real -&gt; real) = (lambda [y:real] &amp; (y - (f(y) / derivative(f)(y)))) in&#10;    pre_((Funtil)[real](isFinish)(nextApproximate), x)))&#10;" number="0" object="" resource="diet2japanPP" toString="newton((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 43:5&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (let isFinish:(real -&gt; bool) = (lambda [y:real] &amp; ((abs f(y)) &lt; e)), nextApproximate:(real -&gt; real) = (lambda [y:real] &amp; (y - (f(y) / derivative(f)(y)))) in&#10;    pre_((Funtil)[real](isFinish)(nextApproximate), x)))&#10;"/>
<po column="5" line="43" message="newton((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 43:5&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (let isFinish:(real -&gt; bool) = (lambda [y:real] &amp; ((abs f(y)) &lt; e)), nextApproximate:(real -&gt; real) = (lambda [y:real] &amp; (y - (f(y) / derivative(f)(y)))) in&#10;    pre_((Funtil)[real](isFinish), nextApproximate)))&#10;" number="0" object="" resource="diet2japanPP" toString="newton((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 43:5&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  (let isFinish:(real -&gt; bool) = (lambda [y:real] &amp; ((abs f(y)) &lt; e)), nextApproximate:(real -&gt; real) = (lambda [y:real] &amp; (y - (f(y) / derivative(f)(y)))) in&#10;    pre_((Funtil)[real](isFinish), nextApproximate)))&#10;"/>
<po column="22" line="48" message="derivative((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 48:22&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  pre_(f, (x + h)))&#10;" number="0" object="" resource="diet2japanPP" toString="derivative((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 48:22&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  pre_(f, (x + h)))&#10;"/>
<po column="31" line="48" message="derivative((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 48:31&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  pre_(f, x))&#10;" number="0" object="" resource="diet2japanPP" toString="derivative((real -&gt; real)): function apply obligation in 'Diet' (diet2japanPP) at line 48:31&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  pre_(f, x))&#10;"/>
<po column="37" line="48" message="derivative((real -&gt; real)): non-zero obligation in 'Diet' (diet2japanPP) at line 48:37&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  h &lt;&gt; 0)&#10;" number="0" object="" resource="diet2japanPP" toString="derivative((real -&gt; real)): non-zero obligation in 'Diet' (diet2japanPP) at line 48:37&#10;(forall f:(real -&gt; real), x:real &amp;&#10;  h &lt;&gt; 0)&#10;"/>
<po column="23" line="53" message="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:23&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  pre_(p, x))&#10;" number="0" object="" resource="diet2japanPP" toString="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:23&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  pre_(p, x))&#10;"/>
<po column="40" line="53" message="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:40&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  (not p(x) =&gt;&#10;    pre_((Funtil)[@T](p)(f), f(x))))&#10;" number="0" object="" resource="diet2japanPP" toString="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:40&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  (not p(x) =&gt;&#10;    pre_((Funtil)[@T](p)(f), f(x))))&#10;"/>
<po column="40" line="53" message="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:40&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  (not p(x) =&gt;&#10;    pre_((Funtil)[@T](p), f)))&#10;" number="0" object="" resource="diet2japanPP" toString="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:40&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  (not p(x) =&gt;&#10;    pre_((Funtil)[@T](p), f)))&#10;"/>
<po column="57" line="53" message="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:57&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  (not p(x) =&gt;&#10;    pre_(f, x)))&#10;" number="0" object="" resource="diet2japanPP" toString="Funtil((@T -&gt; bool)): function apply obligation in 'Diet' (diet2japanPP) at line 53:57&#10;(forall p:(@T -&gt; bool), f:(@T -&gt; @T), x:@T &amp;&#10;  (not p(x) =&gt;&#10;    pre_(f, x)))&#10;"/>
</result>
</testResult>
