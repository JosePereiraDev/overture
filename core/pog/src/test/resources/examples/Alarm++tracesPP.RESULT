["legal map application obligation:(forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) \u0026 (forall p in set (dom sch) \u0026 (p in set (dom sch))))","legal map application obligation:(forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) \u0026 ((forall p in set (dom sch) \u0026 (sch(p) \u003c\u003e {})) \u003d\u003e (forall a in set as \u0026 (forall p in set (dom sch) \u0026 (p in set (dom sch))))))","let be st existence obligation:(forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e (exists expert in set schedule(p) \u0026 ((a.GetReqQuali)() in set (expert.GetQuali)()))))","legal map application obligation:(forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e (p in set (dom schedule))))","legal map application obligation:(forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e let expert:Expert \u003d RESULT in (p in set (dom schedule))))","operation establishes postcondition obligation:(forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e let expert:Expert \u003d RESULT in ((expert in set schedule(p)) and ((a.GetReqQuali)() in set (expert.GetQuali)()))))","legal map application obligation:(forall p:Period \u0026 ((p in set (dom schedule)) \u003d\u003e (p in set (dom schedule))))","legal map application obligation:(forall ex:Expert \u0026 (forall p in set (dom schedule) \u0026 (p in set (dom schedule))))","state invariant holds obligation:(forall als:set of (Alarm), sch:map (Period) to (set of (Expert)) \u0026 (PlantInv(als, sch) \u003d\u003e PlantInv(alarms, schedule)))","state invariant holds obligation:(forall p:Period, ex:Expert \u0026 (PlantInv(alarms, schedule) \u003d\u003e PlantInv(alarms, schedule)))","legal map application obligation:(forall p:Period, ex:Expert \u0026 ((p in set (dom schedule)) \u003d\u003e (p in set (dom schedule))))","legal map application obligation:(forall p:Period, ex:Expert \u0026 ((p in set (dom schedule)) \u003d\u003e (p in set (dom schedule))))","state invariant holds obligation:(forall p:Period, ex:Expert \u0026 ((p in set (dom schedule)) \u003d\u003e (PlantInv(alarms, schedule) \u003d\u003e PlantInv(alarms, schedule))))","enumeration map injectivity obligation:(forall m1, m2 in set {{p1 |-\u003e {ex1, ex4}}, {p2 |-\u003e {ex2, ex3}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))"]