["type invariant satisfiable obligation:(exists mk_AbWorld(authentic, abPurses):AbWorld \u0026 (forall name in set (dom abPurses) \u0026 (name in set authentic)))","type compatibility obligation:(forall p:AbPurse, val:nat \u0026 (((p.balance) \u003e\u003d val) \u003d\u003e (((p.balance) - val) \u003e\u003d 0)))","type compatibility obligation:(forall purses:map (PurseId) to (AbPurse), auth:set of (PurseId) \u0026 (((dom purses) subset auth) \u003d\u003e inv_AbWorld(mk_AbWorld(auth, purses))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 ((frm \u003c\u003e too) \u003d\u003e ((frm in set (dom (wrld.abPurses))) \u003d\u003e ((too in set (dom (wrld.abPurses))) \u003d\u003e (frm in set (dom (wrld.abPurses)))))))","function establishes postcondition obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (pre_TransferOk(wrld, frm, too, val) \u003d\u003e post_TransferOk(wrld, frm, too, val, let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (frm in set (dom (RESULT.abPurses)))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (too in set (dom (RESULT.abPurses)))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (frm in set (dom (wrld.abPurses)))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (too in set (dom (wrld.abPurses)))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (frm in set (dom (RESULT.abPurses))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (too in set (dom (RESULT.abPurses))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (frm in set (dom (wrld.abPurses))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (too in set (dom (wrld.abPurses))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) \u003d (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm, too}) \u0026 (name in set (dom (wrld.abPurses))))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) \u003d (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm, too}) \u0026 (name in set (dom (RESULT.abPurses))))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) \u003d (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm, too}) \u0026 ((GetBalance((wrld.abPurses)(name)) \u003d GetBalance((RESULT.abPurses)(name))) \u003d\u003e (name in set (dom (wrld.abPurses)))))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})) in (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) \u003d (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) \u003d\u003e (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) \u003d (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm, too}) \u0026 ((GetBalance((wrld.abPurses)(name)) \u003d GetBalance((RESULT.abPurses)(name))) \u003d\u003e (name in set (dom (RESULT.abPurses)))))))))","legal function application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e pre_ReduceBalance((wrld.abPurses)(frm), val)))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e (frm in set (dom (wrld.abPurses)))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e (too in set (dom (wrld.abPurses)))))","enumeration map injectivity obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in (forall m1, m2 in set {{frm |-\u003e newFrm}, {too |-\u003e newTo}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))))","type compatibility obligation:(forall wrld:AbWorld, frm:PurseId, too:PurseId, val:nat \u0026 (((frm \u003c\u003e too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)))) \u003d\u003e let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val), newTo:AbPurse \u003d IncreaseBalance((wrld.abPurses)(too), val) in inv_AbWorld(mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e newFrm, too |-\u003e newTo})))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 ((frm in set (dom (wrld.abPurses))) \u003d\u003e (frm in set (dom (wrld.abPurses)))))","function establishes postcondition obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (pre_TransferLost(wrld, frm, any1, val) \u003d\u003e post_TransferLost(wrld, frm, any1, val, let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in (frm in set (dom (RESULT.abPurses)))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in (frm in set (dom (wrld.abPurses)))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in ((GetTotal((RESULT.abPurses)(frm)) \u003d GetTotal((wrld.abPurses)(frm))) \u003d\u003e (frm in set (dom (wrld.abPurses))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in ((GetTotal((RESULT.abPurses)(frm)) \u003d GetTotal((wrld.abPurses)(frm))) \u003d\u003e (frm in set (dom (RESULT.abPurses))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in ((GetTotal((RESULT.abPurses)(frm)) \u003d GetTotal((wrld.abPurses)(frm))) \u003d\u003e ((GetBalance((wrld.abPurses)(frm)) \u003e\u003d GetBalance((RESULT.abPurses)(frm))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm}) \u0026 (name in set (dom (wrld.abPurses))))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in ((GetTotal((RESULT.abPurses)(frm)) \u003d GetTotal((wrld.abPurses)(frm))) \u003d\u003e ((GetBalance((wrld.abPurses)(frm)) \u003e\u003d GetBalance((RESULT.abPurses)(frm))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm}) \u0026 (name in set (dom (RESULT.abPurses))))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in ((GetTotal((RESULT.abPurses)(frm)) \u003d GetTotal((wrld.abPurses)(frm))) \u003d\u003e ((GetBalance((wrld.abPurses)(frm)) \u003e\u003d GetBalance((RESULT.abPurses)(frm))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm}) \u0026 ((GetBalance((wrld.abPurses)(name)) \u003d GetBalance((RESULT.abPurses)(name))) \u003d\u003e (name in set (dom (wrld.abPurses)))))))))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let RESULT \u003d let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})) in ((GetTotal((RESULT.abPurses)(frm)) \u003d GetTotal((wrld.abPurses)(frm))) \u003d\u003e ((GetBalance((wrld.abPurses)(frm)) \u003e\u003d GetBalance((RESULT.abPurses)(frm))) \u003d\u003e (forall name in set ((dom (RESULT.abPurses)) \\ {frm}) \u0026 ((GetBalance((wrld.abPurses)(name)) \u003d GetBalance((RESULT.abPurses)(name))) \u003d\u003e (name in set (dom (RESULT.abPurses)))))))))","legal function application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e pre_ReduceBalance((wrld.abPurses)(frm), val)))","legal map application obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e (frm in set (dom (wrld.abPurses)))))","type compatibility obligation:(forall wrld:AbWorld, frm:PurseId, -:PurseId, val:nat \u0026 (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) \u003e\u003d val)) \u003d\u003e let newFrm:AbPurse \u003d ReduceBalance((wrld.abPurses)(frm), val) in inv_AbWorld(mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-\u003e IncreaseLost(newFrm, val)})))))","enumeration map injectivity obligation:(forall m1, m2 in set {{mk_token(1) |-\u003e mk_AbPurse(100, 0)}, {mk_token(2) |-\u003e mk_AbPurse(10, 0)}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","type compatibility obligation:inv_AbWorld(mk_AbWorld({mk_token(1), mk_token(2)}, {mk_token(1) |-\u003e mk_AbPurse(100, 0), mk_token(2) |-\u003e mk_AbPurse(10, 0)}))"]