["legal function application obligation:(forall bom:map (Pn) to (set of (Pn)) \u0026 ((forall ps in set (rng bom) \u0026 (ps subset (dom bom))) \u003d\u003e (forall p in set (dom bom) \u0026 pre_Parts(p, bom))))","type invariant satisfiable obligation:(exists bom:BOM \u0026 ((forall ps in set (rng bom) \u0026 (ps subset (dom bom))) and (forall p in set (dom bom) \u0026 (p not in set Parts(p, bom)))))","enumeration map injectivity obligation:(forall m1, m2 in set {{1 |-\u003e {2, 4}}, {2 |-\u003e {3, 4, 5}}, {3 |-\u003e {5, 6}}, {4 |-\u003e {6}}, {5 |-\u003e {4}}, {6 |-\u003e {}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation:(forall m1, m2 in set {{1 |-\u003e {2, 4}}, {2 |-\u003e {3, 4, 5}}, {3 |-\u003e {5, 6}}, {4 |-\u003e {6}}, {5 |-\u003e {4}}, {6 |-\u003e {1}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal function application obligation:(forall p:Pn, bom:map (Pn) to (set of (Pn)) \u0026 ((p in set (dom bom)) \u003d\u003e pre_TransClos(bom, bom(p))))","legal map application obligation:(forall p:Pn, bom:map (Pn) to (set of (Pn)) \u0026 ((p in set (dom bom)) \u003d\u003e (p in set (dom bom))))","legal map application obligation:(forall bom:map (Pn) to (set of (Pn)), ps:set of (Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e (forall p in set ps \u0026 (p in set (dom bom)))))","legal map application obligation:(forall bom:map (Pn) to (set of (Pn)), ps:set of (Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (forall p in set ps \u0026 (bom(p) subset ps))) \u003d\u003e (forall p in set ps \u0026 (p in set (dom bom))))))","legal function application obligation:(forall bom:map (Pn) to (set of (Pn)), ps:set of (Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (forall p in set ps \u0026 (bom(p) subset ps))) \u003d\u003e let newps:set of (Pn) \u003d (dunion {bom(p) | p in set ps}) in pre_TransClos(bom, (ps union newps)))))","recursive function obligation:(forall bom:map (Pn) to (set of (Pn)), ps:set of (Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (forall p in set ps \u0026 (bom(p) subset ps))) \u003d\u003e let newps:set of (Pn) \u003d (dunion {bom(p) | p in set ps}) in (IncrAcc(bom, ps) \u003e IncrAcc(bom, (ps union newps))))))","type compatibility obligation:(forall bom:map (Pn) to (set of (Pn)), pns:set of (Pn) \u0026 (((card (dom bom)) - (card pns)) \u003e\u003d 0))","legal map application obligation:(forall p:Pn, bom:BOM \u0026 ((p in set (dom bom)) \u003d\u003e (p in set (dom bom))))","legal function application obligation:(forall p:Pn, bom:BOM \u0026 ((p in set (dom bom)) \u003d\u003e pre_Exps(bom, bom(p))))","legal map application obligation:(forall p:Pn, bom:BOM \u0026 ((p in set (dom bom)) \u003d\u003e (p in set (dom bom))))","let be st existence obligation:(forall bom:BOM, ps:set of (Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (ps \u003d {})) \u003d\u003e (exists p1 in set ps \u0026 true))))","legal function application obligation:(forall bom:BOM, ps:set of (Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (ps \u003d {})) \u003d\u003e (forall p1 in set ps \u0026 pre_Explode(p1, bom)))))","legal function application obligation:(forall bom:BOM, ps:set of (Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (ps \u003d {})) \u003d\u003e (forall p1 in set ps \u0026 pre_Exps(bom, (ps \\ {p1}))))))","map compatible obligation:(forall bom:BOM, p:Pn, ps:set of (Pn) \u0026 (((p not in set (dom bom)) and (ps subset (dom bom))) \u003d\u003e (forall ldom1 in set (dom bom), rdom2 in set (dom {p |-\u003e ps}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (bom(ldom1) \u003d {p |-\u003e ps}(rdom2))))))","type compatibility obligation:(forall bom:BOM, p:Pn, ps:set of (Pn) \u0026 (((p not in set (dom bom)) and (ps subset (dom bom))) \u003d\u003e (inv_BOM((bom munion {p |-\u003e ps})) and is_((bom munion {p |-\u003e ps}), map (Pn) to (set of (Pn))))))","legal map application obligation:(forall p1:Pn, p2:Pn, bom:BOM \u0026 ((p1 in set (dom bom)) \u003d\u003e ((p2 in set (dom bom)) \u003d\u003e (p1 in set (dom bom)))))","legal function application obligation:(forall p1:Pn, p2:Pn, bom:BOM \u0026 ((p1 in set (dom bom)) \u003d\u003e ((p2 in set (dom bom)) \u003d\u003e ((p2 not in set bom(p1)) \u003d\u003e pre_Explode(p2, bom)))))","legal map application obligation:(forall p1:Pn, p2:Pn, bom:BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and ((p2 not in set bom(p1)) and (p1 not in set Explode(p2, bom))))) \u003d\u003e (p1 in set (dom bom))))","type compatibility obligation:(forall p1:Pn, p2:Pn, bom:BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and ((p2 not in set bom(p1)) and (p1 not in set Explode(p2, bom))))) \u003d\u003e (inv_BOM((bom ++ {p1 |-\u003e (bom(p1) union {p2})})) and is_((bom ++ {p1 |-\u003e (bom(p1) union {p2})}), map (Pn) to (set of (Pn))))))","legal map application obligation:(forall p1:Pn, p2:Pn, bom:BOM \u0026 ((p1 in set (dom bom)) \u003d\u003e ((p2 in set (dom bom)) \u003d\u003e (p1 in set (dom bom)))))","legal map application obligation:(forall p1:Pn, p2:Pn, bom:BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and (p2 in set bom(p1)))) \u003d\u003e (p1 in set (dom bom))))","type compatibility obligation:(forall p1:Pn, p2:Pn, bom:BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and (p2 in set bom(p1)))) \u003d\u003e (inv_BOM((bom ++ {p1 |-\u003e (bom(p1) \\ {p2})})) and is_((bom ++ {p1 |-\u003e (bom(p1) \\ {p2})}), map (Pn) to (set of (Pn))))))"]