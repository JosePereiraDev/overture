["non-zero obligation:(forall a:real \u0026 ((a \u003c\u003e 0) \u003d\u003e (a \u003c\u003e 0)))","operation call obligation:(forall text:seq of (char) \u0026 ((\"\" \u003d \"\") \u003c\u003d\u003e (\"\" \u003d nil)))","type compatibility obligation:(true \u003d\u003e ((cigarettes - 1) \u003e\u003d 0))","cases exhaustive obligation:(forall elm:Element \u0026 (((elm \u003d \u003cTobacco\u003e) or (elm \u003d \u003cPaper\u003e)) or (elm \u003d \u003cMatch\u003e)))","legal sequence application obligation:(1 in set (inds thing_l))","legal sequence application obligation:(2 in set (inds thing_l))","legal sequence application obligation:(3 in set (inds thing_l))","state invariant initialized obligation:((card {}) \u003c\u003d 3)","state invariant satisfiable obligation:(exists elements:set of (Element) \u0026 ((card elements) \u003c\u003d 3))","state invariant holds obligation:(forall es:Element \u0026 (((card elements) \u003c\u003d 3) \u003d\u003e ((card (elements union {es})) \u003c\u003d 3)))","state invariant holds obligation:(((card elements) \u003c\u003d 3) \u003d\u003e ((card {}) \u003c\u003d 3))","let be st existence obligation:(forall es:set of (Element) \u0026 (((card es) \u003d 1) \u003d\u003e (exists e in set es \u0026 true)))"]