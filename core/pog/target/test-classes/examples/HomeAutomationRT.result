["type compatibility obligation:((HA`HumidNode.ReadValue)() \u003e\u003d 0)","type compatibility obligation:((HA`TempNode.ReadValue)() \u003e\u003d 0)","operation establishes postcondition obligation:(forall id:nat, type:nodeType \u0026 ((id not in set (dom NodeList)) \u003d\u003e (forall finished1:bool, TargetTemp2:nat, Temp3:nat, TargetHumid4:nat, Humid5:nat, NodeList6:map (nat) to (nodeType), Algo7:algType, incTempCnt8:nat, decTempCnt9:nat, decHumidCnt10:nat \u0026 (true \u003d\u003e ((card (dom NodeList6)) \u003d ((card (dom NodeList)) + 1))))))","legal map application obligation:(forall id:nat, type:nodeType \u0026 ((id in set (dom NodeList)) \u003d\u003e (id in set (dom NodeList))))","operation establishes postcondition obligation:(forall id:nat, type:nodeType \u0026 ((id in set (dom NodeList)) \u003d\u003e (forall finished1:bool, TargetTemp2:nat, Temp3:nat, TargetHumid4:nat, Humid5:nat, NodeList6:map (nat) to (nodeType), Algo7:algType, incTempCnt8:nat, decTempCnt9:nat, decHumidCnt10:nat \u0026 (true \u003d\u003e ((card (dom NodeList6)) \u003d ((card (dom NodeList)) - 1))))))","legal function application obligation:(forall fname:seq of (char) \u0026 ((fname \u003c\u003e []) \u003d\u003e pre_(((io.freadval))[(nat * seq of (inline))]fname)))","operation establishes postcondition obligation:(forall fname:seq of (char) \u0026 ((fname \u003c\u003e []) \u003d\u003e ((input \u003c\u003e []) and (t \u003e 0))))","non-empty sequence obligation:(inlines \u003c\u003e [])","non-empty sequence obligation:(forall io1:IO, inlines2:seq of (inline), outlines3:seq of (outline), simtime4:nat, finished5:bool, envTemp6:int, envHumid7:int \u0026 (true \u003d\u003e (forall io8:IO, inlines9:seq of (inline), outlines10:seq of (outline), simtime11:nat, finished12:bool, envTemp13:int, envHumid14:int \u0026 (true \u003d\u003e (inlines9 \u003c\u003e [])))))","legal sequence application obligation:(true \u003d\u003e (true \u003d\u003e (i in set (inds outlines))))","type compatibility obligation:(RESULT \u003e\u003d 0)","operation call obligation:(forall text:seq of (char) \u0026 ((\"\" \u003d \"\") \u003c\u003d\u003e (\"\" \u003d nil)))"]