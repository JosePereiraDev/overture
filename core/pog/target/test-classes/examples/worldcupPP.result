["type invariant satisfiable obligation:(exists sc:Score \u0026 ((sc.points) \u003d ((3 * (sc.won)) + (sc.drawn))))","enumeration map injectivity obligation:(forall m1, m2 in set {{\u003cA\u003e |-\u003e sc_init({\u003cBrazil\u003e, \u003cNorway\u003e, \u003cMorocco\u003e, \u003cScotland\u003e})}, {\u003cB\u003e |-\u003e sc_init({\u003cItaly\u003e, \u003cChile\u003e, \u003cAustria\u003e, \u003cCameroon\u003e})}, {\u003cC\u003e |-\u003e sc_init({\u003cFrance\u003e, \u003cDenmark\u003e, \u003cSouthAfrica\u003e, \u003cSaudiArabia\u003e})}, {\u003cD\u003e |-\u003e sc_init({\u003cNigeria\u003e, \u003cParaguay\u003e, \u003cSpain\u003e, \u003cBulgaria\u003e})}, {\u003cE\u003e |-\u003e sc_init({\u003cHolland\u003e, \u003cMexico\u003e, \u003cBelgium\u003e, \u003cSouthKorea\u003e})}, {\u003cF\u003e |-\u003e sc_init({\u003cGermany\u003e, \u003cYugoslavia\u003e, \u003cIran\u003e, \u003cUnitedStates\u003e})}, {\u003cG\u003e |-\u003e sc_init({\u003cRumania\u003e, \u003cEngland\u003e, \u003cColombia\u003e, \u003cTunisia\u003e})}, {\u003cH\u003e |-\u003e sc_init({\u003cArgentina\u003e, \u003cCroatia\u003e, \u003cJamaica\u003e, \u003cJapan\u003e})}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","state invariant initialized obligation:(forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3))))","state invariant satisfiable obligation:(exists gps:map (GroupName) to (set of (Score)) \u0026 (forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3)))))","type compatibility obligation:(forall ts:set of (Team) \u0026 (forall t in set ts \u0026 inv_Score(mk_Score(t, 0, 0, 0, 0))))","legal map application obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (forall gp in set (dom gps) \u0026 (gp in set (dom gps)))))","let be st existence obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)}))))","legal map application obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (gp in set (dom gps))))","state invariant holds obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e ((forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3)))) \u003d\u003e (forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3)))))))","legal map application obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp in set (dom gps) \u0026 (gp in set (dom gps)))","legal map application obligation:((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (forall gp in set (dom gps) \u0026 (gp in set (dom gps))))","legal map application obligation:((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (forall gp in set (dom gps) \u0026 (({wt, lt} subset {(sc.team) | sc in set gps(gp)}) \u003d\u003e (gp in set (dom gps)))))","operation postcondition satisfiable obligation:(forall wt:Team, lt:Team, oldself:GroupPhase \u0026 (pre_Win2(wt, lt, oldself) \u003d\u003e (exists newself:GroupPhase \u0026 post_Win2(wt, lt, oldself, newself))))","legal map application obligation:((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps)))","legal map application obligation:((gp in set (dom gps)) \u003d\u003e ((t in set {(sc.team) | sc in set gps(gp)}) \u003d\u003e (gp in set (dom gps))))","unique existence binding obligation:((gp in set (dom gps)) \u003d\u003e ((t in set {(sc.team) | sc in set gps(gp)}) \u003d\u003e (exists1 sc in set gps(gp) \u0026 ((sc.team) \u003d t))))","legal map application obligation:((gp in set (dom gps)) \u003d\u003e ((t in set {(sc.team) | sc in set gps(gp)}) \u003d\u003e let sct:Score \u003d (iota sc in set gps(gp) \u0026 ((sc.team) \u003d t)) in (gp in set (dom gps))))","operation postcondition satisfiable obligation:(forall gp:GroupName, oldself:GroupPhase \u0026 (pre_GroupWinner(gp, oldself) \u003d\u003e (exists t:Team \u0026 post_GroupWinner(gp, oldself, t, oldself, newself))))","let be st existence obligation:((gp in set (dom gps)) \u003d\u003e (exists sc\u0027 in set gps(gp) \u0026 true))","legal map application obligation:((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps)))","legal map application obligation:((gp in set (dom gps)) \u003d\u003e (forall sc\u0027 in set gps(gp) \u0026 (true \u003d\u003e (gp in set (dom gps)))))","legal map application obligation:((gp in set (dom gps)) \u003d\u003e (forall sc\u0027 in set gps(gp) \u0026 (true \u003d\u003e ((t in set {(sc.team) | sc in set (gps(gp) \\ {sc\u0027})}) \u003d\u003e (gp in set (dom gps))))))","unique existence binding obligation:((gp in set (dom gps)) \u003d\u003e (forall sc\u0027 in set gps(gp) \u0026 (true \u003d\u003e ((t in set {(sc.team) | sc in set (gps(gp) \\ {sc\u0027})}) \u003d\u003e (exists1 sc in set (gps(gp) \\ {sc\u0027}) \u0026 ((sc.team) \u003d t))))))","legal map application obligation:((gp in set (dom gps)) \u003d\u003e (forall sc\u0027 in set gps(gp) \u0026 (true \u003d\u003e ((t in set {(sc.team) | sc in set (gps(gp) \\ {sc\u0027})}) \u003d\u003e let sct:Score \u003d (iota sc in set (gps(gp) \\ {sc\u0027}) \u0026 ((sc.team) \u003d t)) in (gp in set (dom gps))))))","operation postcondition satisfiable obligation:(forall gp:GroupName, oldself:GroupPhase \u0026 (pre_GroupRunnerUp(gp, oldself) \u003d\u003e (exists t:Team \u0026 post_GroupRunnerUp(gp, oldself, t, oldself, newself))))","let be st existence obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (exists sc in set gps(gp) \u0026 (forall sc\u0027 in set (gps(gp) \\ {sc}) \u0026 (((sc.points) \u003e (sc\u0027.points)) or (((sc.points) \u003d (sc\u0027.points)) and ((sc.won) \u003e (sc\u0027.won))))))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","unique existence binding obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (exists1 sc in set gps(gp) \u0026 ((sc.team) \u003d t))))","let be st existence obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (exists sc in set (gps(gp) \\ {sct}) \u0026 (forall sc\u0027 in set (gps(gp) \\ {sc, sct}) \u0026 (((sc.points) \u003e (sc\u0027.points)) or (((sc.points) \u003d (sc\u0027.points)) and ((sc.won) \u003e (sc\u0027.won))))))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","comprehension map injectivity obligation:(forall m1, m2 in set {{gp |-\u003e GroupWinner_expl(gp)} | gp in set (dom gps)} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","comprehension map injectivity obligation:(forall m1, m2 in set {{gp |-\u003e GroupRunnerUp_expl(gp)} | gp in set (dom gps)} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation:(forall i in set {1, ... ,8} \u0026 (secondRoundWinners(i) in set (dom winners)))","legal sequence application obligation:(forall i in set {1, ... ,8} \u0026 (i in set (inds secondRoundWinners)))","legal map application obligation:(forall i in set {1, ... ,8} \u0026 (secondRoundRunnersUp(i) in set (dom runners_up)))","legal sequence application obligation:(forall i in set {1, ... ,8} \u0026 (i in set (inds secondRoundRunnersUp)))","legal map application obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (forall gp in set (dom gps) \u0026 (gp in set (dom gps)))))","let be st existence obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)}))))","legal map application obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (gp in set (dom gps))))","state invariant holds obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e ((forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3)))) \u003d\u003e (forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3)))))))","legal map application obligation:(forall wt:Team, lt:Team \u0026 ((exists gp in set (dom gps) \u0026 ({wt, lt} subset {(sc.team) | sc in set gps(gp)})) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","unique existence binding obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (exists1 sc in set gps(gp) \u0026 (forall sc\u0027 in set (gps(gp) \\ {sc}) \u0026 ((sc.points) \u003e (sc\u0027.points))))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (forall sc in set gps(gp) \u0026 (gp in set (dom gps)))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","unique existence binding obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (exists1 sc in set gps(gp) \u0026 (forall sc\u0027 in set (gps(gp) \\ {sc}) \u0026 (((sc.points) \u003e (sc\u0027.points)) or (((sc.points) \u003d (sc\u0027.points)) and ((sc.won) \u003e (sc\u0027.won))))))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (forall sc in set gps(gp) \u0026 (gp in set (dom gps)))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (forall sc in set gps(gp) \u0026 (gp in set (dom gps)))))","let be st existence obligation:(forall ts:set of (Team) \u0026 (exists t\u0027 in set ts \u0026 true))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","unique existence binding obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (exists1 sc in set gps(gp) \u0026 (forall sc\u0027 in set (gps(gp) \\ {sc}) \u0026 ((sc.points) \u003e (sc\u0027.points))))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (forall sc in set gps(gp) \u0026 (gp in set (dom gps)))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","unique existence binding obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (exists1 sc in set gps(gp) \u0026 (forall sc\u0027 in set (gps(gp) \\ {sc}) \u0026 (((sc.points) \u003e (sc\u0027.points)) or (((sc.points) \u003d (sc\u0027.points)) and ((sc.won) \u003e (sc\u0027.won))))))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (forall sc in set gps(gp) \u0026 (gp in set (dom gps)))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (gp in set (dom gps))))","legal map application obligation:(forall gp:GroupName \u0026 ((gp in set (dom gps)) \u003d\u003e (forall sc in set gps(gp) \u0026 (gp in set (dom gps)))))","state invariant holds obligation:((forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3)))) \u003d\u003e (forall gp in set (rng gps) \u0026 (((card gp) \u003d 4) and (forall sc in set gp \u0026 ((((sc.won) + (sc.lost)) + (sc.drawn)) \u003c\u003d 3)))))"]