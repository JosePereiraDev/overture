["type compatibility obligation:(forall command:[LogCom], oldstate:Dwarf \u0026 (AllowedCommand(command, lampstate) \u003d\u003e inv_Dwarf(mk_Dwarf([], lampstate))))","type compatibility obligation:(forall command:[LogCom], oldstate:Dwarf \u0026 (AllowedCommand(command, lampstate) \u003d\u003e inv_Dwarf(mk_Dwarf(t, darklamps))))","type compatibility obligation:(forall command:[LogCom], oldstate:Dwarf \u0026 (AllowedCommand(command, lampstate) \u003d\u003e inv_Dwarf(mk_Dwarf(t, stoplamps))))","type compatibility obligation:(forall command:[LogCom], oldstate:Dwarf \u0026 (AllowedCommand(command, lampstate) \u003d\u003e inv_Dwarf(mk_Dwarf(t, warninglamps))))","type compatibility obligation:(forall command:[LogCom], oldstate:Dwarf \u0026 (AllowedCommand(command, lampstate) \u003d\u003e inv_Dwarf(mk_Dwarf(t, drivelamps))))","type compatibility obligation:(forall com:[LogCom], dwarf:Dwarf, failures:set of (LampId), oldstate:Dwarf \u0026 (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e is_(RESULT, (Message * Errors * Trace))))))))))","state invariant holds obligation:(forall com:[LogCom], mk_Dwarf(newtr, newsignals):Dwarf, failures:set of (LampId), oldstate:Dwarf \u0026 let mk_Dwarf(t, s) \u003d Dwarf in (MaxOneLampChange(t) and (StopToDriveOrWarning(t) and (ToAndFromDark(t) and AlwaysDefinedState(s)))))","state invariant holds obligation:(forall com:[LogCom], mk_Dwarf(newtr, newsignals):Dwarf, failures:set of (LampId), oldstate:Dwarf \u0026 let mk_Dwarf(t, s) \u003d Dwarf in (MaxOneLampChange(t) and (StopToDriveOrWarning(t) and (ToAndFromDark(t) and AlwaysDefinedState(s)))))","type compatibility obligation:(forall com:[LogCom], mk_Dwarf(newtr, newsignals):Dwarf, failures:set of (LampId), oldstate:Dwarf \u0026 is_(RESULT, (Message * Errors * Trace)))","legal sequence application obligation:(forall t:Trace \u0026 (forall i in set ((inds t) \\ {1}) \u0026 ((i - 1) in set (inds t))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i in set ((inds t) \\ {1}) \u0026 (i in set (inds t))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i in set ((inds t) \\ {1}) \u0026 (((card (t((i - 1)) \\ t(i))) \u003c\u003d 1) \u003d\u003e (i in set (inds t)))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i in set ((inds t) \\ {1}) \u0026 (((card (t((i - 1)) \\ t(i))) \u003c\u003d 1) \u003d\u003e ((i - 1) in set (inds t)))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i, j in set (inds t) \u0026 ((i \u003c j) \u003d\u003e (i in set (inds t)))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i, j in set (inds t) \u0026 ((i \u003c j) \u003d\u003e ((t(i) \u003d stoplamps) \u003d\u003e (j in set (inds t))))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i, j in set (inds t) \u0026 ((i \u003c j) \u003d\u003e ((t(i) \u003d stoplamps) \u003d\u003e ((t(j) in set {drivelamps, warninglamps}) \u003d\u003e (forall k in set {(i + 1), ... ,(j - 1)} \u0026 (k in set (inds t))))))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i, j in set (inds t) \u0026 (((i \u003c j) and ((t(i) \u003d stoplamps) and ((t(j) in set {drivelamps, warninglamps}) and (not (exists k in set {(i + 1), ... ,(j - 1)} \u0026 (t(k) in set {darklamps, warninglamps, drivelamps})))))) \u003d\u003e (forall k in set {(i + 1), ... ,(j - 1)} \u0026 (k in set (inds t))))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i, j in set (inds t) \u0026 (((i \u003c j) and ((t(i) \u003d stoplamps) and ((t(j) in set {drivelamps, warninglamps}) and (not (exists k in set {(i + 1), ... ,(j - 1)} \u0026 (t(k) in set {darklamps, warninglamps, drivelamps})))))) \u003d\u003e (forall k in set {(i + 1), ... ,(j - 1)} \u0026 (((card t(k)) \u003c 3) \u003d\u003e (k in set (inds t)))))))","legal sequence application obligation:(forall t:Trace \u0026 (forall i in set (inds t) \u0026 (i in set (inds t))))","legal sequence application obligation:(forall t:Trace, i:nat1 \u0026 ((i \u003e 2) \u003d\u003e ((i - 2) in set (inds t))))","legal sequence application obligation:(forall t:Trace, i:nat1 \u0026 (((i \u003e 2) \u003d\u003e (t((i - 2)) \u003d stoplamps)) \u003d\u003e (((i + 1) \u003c (len t)) \u003d\u003e ((i + 2) in set (inds t)))))"]